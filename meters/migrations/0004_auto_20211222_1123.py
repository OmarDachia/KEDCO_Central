# Generated by Django 3.2.8 on 2021-12-22 10:23

import core.utils.units
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import meters.models
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('gridx', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('location', '0006_alter_lga_state'),
        ('accounts', '0006_historicalvendorprofile_vendorprofile'),
        ('meters', '0003_meterapplicationkyc'),
    ]

    operations = [
        migrations.CreateModel(
            name='MeterPhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('phase', models.CharField(choices=[('single_phase', 'Single Phase'), ('two_phase', 'Two Phase'), ('three_phase', 'Three Phase')], max_length=15)),
                ('price', models.FloatField()),
            ],
            options={
                'verbose_name': 'Meter Phase',
                'verbose_name_plural': 'Meter Phases',
                'ordering': ['-updated'],
            },
        ),
        migrations.RemoveField(
            model_name='meterapplicationkyc',
            name='meter_number',
        ),
        migrations.AddField(
            model_name='meterapplication',
            name='account_number',
            field=models.CharField(blank=True, max_length=16, null=True, validators=[meters.models.checkAccountNumber]),
        ),
        migrations.AddField(
            model_name='meterapplication',
            name='installation_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='meterapplication',
            name='request_type',
            field=models.CharField(choices=[('new_request', 'New Request'), ('replacememt', 'Replacememt')], default='new_request', max_length=20),
        ),
        migrations.AddField(
            model_name='meterapplicationkyc',
            name='band',
            field=models.CharField(choices=[('band_a', 'Band A'), ('band_b', 'Band B'), ('band_c', 'Band C'), ('band_d', 'Band D'), ('band_e', 'Band E')], default=1, max_length=15),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='meterapplicationkyc',
            name='feeder',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='gridx.feeder'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='meterapplicationkyc',
            name='transformer',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='gridx.transformer'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='MeterApplicationIntallation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('meter_number', models.CharField(max_length=15)),
                ('installation_date', models.DateField()),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='installation', to='meters.meterapplication')),
                ('installed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='meters_installed', to='accounts.vendorprofile')),
            ],
            options={
                'verbose_name': 'Meter Application Installation',
                'verbose_name_plural': 'Meter Applications Installation',
                'ordering': ['-updated'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalMeterPhase',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('phase', models.CharField(choices=[('single_phase', 'Single Phase'), ('two_phase', 'Two Phase'), ('three_phase', 'Three Phase')], max_length=15)),
                ('price', models.FloatField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Meter Phase',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMeterApplicationKYC',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('address', models.CharField(max_length=150)),
                ('band', models.CharField(choices=[('band_a', 'Band A'), ('band_b', 'Band B'), ('band_c', 'Band C'), ('band_d', 'Band D'), ('band_e', 'Band E')], max_length=15)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='meters.meterapplication')),
                ('csp', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.csp')),
                ('feeder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gridx.feeder')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('kyc_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.userprofile')),
                ('meter_phase', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='meters.meterphase')),
                ('region', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.region')),
                ('transformer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gridx.transformer')),
            ],
            options={
                'verbose_name': 'historical Meter Application KYC',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMeterApplicationIntallation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('meter_number', models.CharField(max_length=15)),
                ('installation_date', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='meters.meterapplication')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('installed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.vendorprofile')),
            ],
            options={
                'verbose_name': 'historical Meter Application Installation',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMeterApplication',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('uid', models.CharField(default=core.utils.units.genserial, max_length=10)),
                ('address', models.CharField(max_length=150)),
                ('request_type', models.CharField(choices=[('new_request', 'New Request'), ('replacememt', 'Replacememt')], default='new_request', max_length=20)),
                ('account_number', models.CharField(blank=True, max_length=16, null=True, validators=[meters.models.checkAccountNumber])),
                ('meter_number', models.CharField(blank=True, max_length=15, null=True)),
                ('installation_date', models.DateField(blank=True, null=True)),
                ('stage', models.CharField(choices=[('awaiting_kyc', 'Awaiting KYC'), ('complete_kyc', 'Complete KYC'), ('awaiting_payment', 'Awaiting Payment'), ('complete_payment', 'Complete Payment'), ('awaiting_installation', 'Awaiting Installation'), ('completed', 'completed')], max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.customerprofile')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.region')),
            ],
            options={
                'verbose_name': 'historical Meter Application',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='meterapplicationkyc',
            name='meter_phase',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='meters.meterphase'),
            preserve_default=False,
        ),
    ]
