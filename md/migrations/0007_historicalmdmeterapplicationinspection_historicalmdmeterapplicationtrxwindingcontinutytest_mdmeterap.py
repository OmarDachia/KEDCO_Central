# Generated by Django 3.2.8 on 2023-08-03 09:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0021_auto_20230316_1140'),
        ('location', '0012_auto_20220927_1051'),
        ('gridx', '0008_auto_20230803_1006'),
        ('md', '0006_auto_20230605_1137'),
    ]

    operations = [
        migrations.CreateModel(
            name='MDMeterApplicationInspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('address', models.CharField(max_length=150)),
                ('trnx_make', models.CharField(help_text='Transformer Make/Type', max_length=20)),
                ('trnx_power_rating', models.CharField(help_text='Transformer Power Rating', max_length=20)),
                ('trnx_current', models.CharField(help_text='Transformer Current HV/LV', max_length=20)),
                ('trnx_impedance', models.CharField(help_text='Transformer Impedance', max_length=20)),
                ('trnx_vector_group', models.CharField(help_text='Transformer Vector Group', max_length=20)),
                ('trnx_serial_number', models.CharField(help_text='Transformer Serial Number', max_length=20)),
                ('trnx_manufacture_year', models.CharField(help_text='Transformer Year of Manufacture', max_length=20)),
                ('date_of_test', models.DateField()),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='inspection', to='md.mdmeterapplication')),
                ('csp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='md_application_inspections', to='location.csp')),
                ('feeder', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='md_application_inspections', to='gridx.feeder')),
                ('inspection_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='md_meters_inspections', to='accounts.userprofile')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='md_application_inspection', to='location.region')),
                ('substation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='md_application_inspections', to='gridx.station')),
            ],
            options={
                'verbose_name': 'MD Meter Application Inspection',
                'verbose_name_plural': 'MD Meter Applications Inspections',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='MDMeterApplicationTrxWindingContinutyTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('R_Y', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('Y_B', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('B_R', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('r_y_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('y_b_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('b_r_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('r_n_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('y_n_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('b_n_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='trx_winding_test', to='md.mdmeterapplicationinspection')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.userprofile')),
            ],
            options={
                'verbose_name': 'MD Meter TRX Winding Test Inspection',
                'verbose_name_plural': 'MD Meter TRX Winding Test Inspection',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='HistoricalMDMeterApplicationTrxWindingContinutyTest',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('R_Y', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('Y_B', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('B_R', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('r_y_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('y_b_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('b_r_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('r_n_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('y_n_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('b_n_small', models.IntegerField(help_text='Reading in Mega Ohms')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('inspection', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='md.mdmeterapplicationinspection')),
                ('recorded_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.userprofile')),
            ],
            options={
                'verbose_name': 'historical MD Meter TRX Winding Test Inspection',
                'verbose_name_plural': 'historical MD Meter TRX Winding Test Inspection',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMDMeterApplicationInspection',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('timestamp', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('longitude', models.FloatField()),
                ('latitude', models.FloatField()),
                ('altitude', models.FloatField()),
                ('accuracy', models.FloatField()),
                ('address', models.CharField(max_length=150)),
                ('trnx_make', models.CharField(help_text='Transformer Make/Type', max_length=20)),
                ('trnx_power_rating', models.CharField(help_text='Transformer Power Rating', max_length=20)),
                ('trnx_current', models.CharField(help_text='Transformer Current HV/LV', max_length=20)),
                ('trnx_impedance', models.CharField(help_text='Transformer Impedance', max_length=20)),
                ('trnx_vector_group', models.CharField(help_text='Transformer Vector Group', max_length=20)),
                ('trnx_serial_number', models.CharField(help_text='Transformer Serial Number', max_length=20)),
                ('trnx_manufacture_year', models.CharField(help_text='Transformer Year of Manufacture', max_length=20)),
                ('date_of_test', models.DateField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('application', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='md.mdmeterapplication')),
                ('csp', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.csp')),
                ('feeder', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gridx.feeder')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('inspection_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.userprofile')),
                ('region', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='location.region')),
                ('substation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='gridx.station')),
            ],
            options={
                'verbose_name': 'historical MD Meter Application Inspection',
                'verbose_name_plural': 'historical MD Meter Applications Inspections',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
